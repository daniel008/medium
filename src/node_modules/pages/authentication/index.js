import React, {useState, useRef, useEffect} from 'react'
import { Link } from 'react-router-dom'
import axios from 'axios'
import useFetch from 'hooks/useFetch'

// We want to fetch data from different urls. Which means that we want to define the url
// We want to make fetch sometimes on initialize (like in global feed) and sometimes on form submit(like in login form)
// We want to get isLoading state to know that we are in the process og getting data and show it to user accordingly.
// We want to get errors to show something to user if API call is not successful.


const Authentication = (props) => {
  const isLogin = props.match.path === '/login'
  const pageTitle = isLogin ? 'Sign in' : 'Sign up'
  const descriptionLink = isLogin ? '/register' : '/login'
  const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'
  const apiUrl = isLogin ? '/users/login' : '/users'
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [username, setUsername ]= useState('')
  // const emailRef = useRef(null)
  // const [isSubmitting, setIssubmitting] = useState(false)
  const [{isLoading, response, error}, doFetch] = useFetch(apiUrl)
  console.log('useFetch', isLoading, error, response);

  console.log(props);

  const handleSubmit = (event) => {
    event.preventDefault();

    const user = isLogin ? {email, password} : {email, password, username}

    doFetch({
      method: 'post',
      data: {
        user
      }
    })
    // setIssubmitting(true)
    console.log('values', email,  password);
  }

  return (
    <div className="auth-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">{pageTitle}</h1>
            <p className="text-xs-center">
              <Link to={descriptionLink}>{descriptionText}</Link>
            </p>
            <form onSubmit={handleSubmit}>
              <fieldset>
                {!isLogin && (
                <fieldset className="form-group">
                  <input
                    type="text"
                    className="form-control form-control-lg"
                    placeholder="Username"
                    value={username}
                    onChange={e=>setUsername(e.target.value)}
                  />
                </fieldset>
                )}
                <fieldset className="form-group">
                  <input
                    type="email"
                    className="form-control form-control-lg"
                    placeholder="Email"
                    value={email}
                    onChange={e=>setEmail(e.target.value)}
                    // ref={emailRef}
                  />
                </fieldset>
                <fieldset className="form-group">
                  <input
                    type="password"
                    className="form-control form-control-lg"
                    placeholder="Password"
                    value={password}
                    onChange={e => setPassword(e.target.value)}
                    />
                </fieldset>
                <button
                  disabled={isLoading}
                  className="btn btn-lg btn-primary pull-xs-right"
                  type="submit"
                >
                  {pageTitle} </button>
              </fieldset>
            </form>
           </div>
        </div>
      </div>
    </div>
  )
}

export default Authentication
